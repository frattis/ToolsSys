<?xml version="1.0" encoding="utf-8"?>
<!--
***********************************************************************************************
SlowCheetah.Transforms.targets

WARNING:  DO NOT MODIFY this file unless you are knowledgeable about MSBuild and have
          created a backup copy.  Incorrect changes to this file will make it
          impossible to load or build your web deploy projects from the command-line or the IDE.

This file defines the steps in order to transform XML files.

Copyright (C) Sayed Ibrahim Hashimi, Chuck England 2011. All rights reserved.
***********************************************************************************************
-->
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <UsingTask TaskName="SlowCheetah.Tasks.TransformXml"
         AssemblyFile="SlowCheetah.Tasks.dll"/>

  <ItemDefinitionGroup>
    <!-- Set the default value to false here -->
    <None>
      <TransformOnBuild>false</TransformOnBuild>
    </None>
    <Content>
      <TransformOnBuild>false</TransformOnBuild>
    </Content>
    <Resource>
      <TransformOnBuild>false</TransformOnBuild>
    </Resource>
    <EmbeddedResource>
      <TransformOnBuild>false</TransformOnBuild>
    </EmbeddedResource>

    <_FilesToTransform>
      <IsAppConfig>false</IsAppConfig>
    </_FilesToTransform>
  </ItemDefinitionGroup>

  <PropertyGroup>
    <WapProjectTypeGuid>349c5851-65df-11da-9384-00065b846f21</WapProjectTypeGuid>
    <_IsWap Condition=" '$(WapProjectTypeGuid)' != '' and '$(ProjectTypeGuids)' != '' ">$(ProjectTypeGuids.Contains($(WapProjectTypeGuid)))</_IsWap>
    <_IsWap Condition=" '$(_IsWap)' == '' ">false</_IsWap>
    <IsWap Condition=" '$(IsWap)' == ''">$(_IsWap)</IsWap>

    <SlowCheetahImport>$(MSBuildThisFileFullPath)</SlowCheetahImport>
    <BuildDependsOn Condition=" '$(IsWap)'!='true' ">
      $(BuildDependsOn);
      TransformAllFiles
    </BuildDependsOn>
    <TransformAllFilesDependsOn>
      _CopyAppConfigFile;
      DiscoverFilesToTransform;
    </TransformAllFilesDependsOn>
  </PropertyGroup>

  <Target Name="TransformAllFiles"
          DependsOnTargets="$(TransformAllFilesDependsOn)">
    <!-- Now we have the item list _FilesToTransformNotAppConfig and _AppConfigToTransform item lists -->
    <!-- Transform the app.config file -->
    <ItemGroup>
      <_AppConfigTarget Include="@(AppConfigWithTargetPath->'$(OutDir)%(TargetPath)')" />
    </ItemGroup>

    <PropertyGroup>
      <_AppConfigDest>@(_AppConfigTarget->'%(FullPath)')</_AppConfigDest>
    </PropertyGroup>

    <MakeDir Directories="@(_FilesToTransformNotAppConfig->'$(OutDir)%(RelativeDir)')"
             Condition="Exists('%(RelativeDir)%(Filename).$(Configuration)%(Extension)')"/>

    <SlowCheetah.Tasks.TransformXml Source="@(_AppConfigToTransform->'%(FullPath)')"
                  Transform="%(RelativeDir)%(Filename).$(Configuration)%(Extension)"
                  Destination="$(_AppConfigDest)"
                  Condition=" Exists('%(RelativeDir)%(Filename).$(Configuration)%(Extension)') " />


    <SlowCheetah.Tasks.TransformXml Source="@(_FilesToTransformNotAppConfig->'%(FullPath)')"
                  Transform="%(RelativeDir)%(Filename).$(Configuration)%(Extension)"
                  Destination="@(_FilesToTransformNotAppConfig->'$(OutDir)%(RelativeDir)%(Filename)%(Extension)')"
                  Condition=" Exists('%(RelativeDir)%(Filename).$(Configuration)%(Extension)') " />
  </Target>

  <Target Name="DiscoverFilesToTransform">
    <!-- 
    This will look through items list: None & Content for those
    with Metadata <TransformOnBuild>True</TransformOnBuild>
    -->
    <ItemGroup>
      <_FilesToTransform Include="@(None);@(Content);@(Resource);@(EmbeddedResource)"
                         Condition=" '%(TransformOnBuild)' == 'true' "/>
    </ItemGroup>

    <PropertyGroup>
      <_AppConfigFullPath>@(AppConfigWithTargetPath->'%(RootDir)%(Directory)%(Filename)%(Extension)')</_AppConfigFullPath>
    </PropertyGroup>

    <!-- Now look to see if any of these are the app.config file -->
    <ItemGroup>
      <_FilesToTransform Condition=" '%(FullPath)'=='$(_AppConfigFullPath)' ">
        <IsAppConfig>true</IsAppConfig>
      </_FilesToTransform>
    </ItemGroup>

    <ItemGroup>
      <_FilesToTransformNotAppConfig Include="@(_FilesToTransform)"
                                     Condition=" '%(IsAppConfig)'!='true'"/>

      <_AppConfigToTransform  Include="@(_FilesToTransform)"
                              Condition=" '%(IsAppConfig)'=='true'"/>
    </ItemGroup>
  </Target>


  <PropertyGroup Condition=" '$(IsWap)' == 'true' ">
    <OnAfterPipelinePreDeployCopyAllFilesToOneFolder>
      $(OnAfterPipelinePreDeployCopyAllFilesToOneFolder);
      CopyTransformFilesWap;
    </OnAfterPipelinePreDeployCopyAllFilesToOneFolder>
    <CopyTransformFilesWapDependsOn>
      CopyAllFilesToSingleFolderForPackage;
      DiscoverFilesToTransform;
    </CopyTransformFilesWapDependsOn>
  </PropertyGroup>

  <Target Name="CopyTransformFilesWap"
          DependsOnTargets="$(CopyTransformFilesWapDependsOn)">
    <Message Text="_FilesToTransformNotAppConfig: @(_FilesToTransformNotAppConfig)"/>

    <MakeDir Directories="@(_FilesToTransformNotAppConfig->'$(_PackageTempDir)\%(RelativeDir)')"
         Condition="Exists('%(RelativeDir)%(Filename).$(Configuration)%(Extension)')"/>
    <!--Make sure that we do not do this for web.config-->
    <SlowCheetah.Tasks.TransformXml Source="@(_FilesToTransformNotAppConfig->'%(FullPath)')"
              Transform="%(RelativeDir)%(Filename).$(Configuration)%(Extension)"
              Destination="@(_FilesToTransformNotAppConfig->'$(_PackageTempDir)\%(RelativeDir)%(Filename)%(Extension)')"
              Condition=" '%(Filename)%(Extension)' != 'web.config' and
                          Exists('%(RelativeDir)%(Filename).$(Configuration)%(Extension)')" />
  </Target>

  <Target Name="SlowCheetah_ClickOnceUpdate" BeforeTargets="_DeploymentComputeClickOnceManifestInfo" DependsOnTargets="TransformAllFiles">
    <PropertyGroup>
      <_SlowCheetahAppConfigTransformExists Condition="Exists(@(_AppConfigToTransform->'%(RelativeDir)%(Filename).$(Configuration)%(Extension)'))">true</_SlowCheetahAppConfigTransformExists>
    </PropertyGroup>
    <PropertyGroup>
      <_OldAppConfigWithTargetPath>%(AppConfigWithTargetPath.TargetPath)</_OldAppConfigWithTargetPath>
      <_SCNewAppConfigFile>@(AppConfigWithTargetPath->'$(IntermediateOutputPath)SlowCheetah\%(Filename)%(Extension)')</_SCNewAppConfigFile>
    </PropertyGroup>

    <Copy SourceFiles="@(AppConfigWithTargetPath->'$(OutDir)%(TargetPath)')" DestinationFiles="$(_SCNewAppConfigFile)" Condition="'$(_SlowCheetahAppConfigTransformExists)'=='true'" />
    <ItemGroup Condition="'$(_SlowCheetahAppConfigTransformExists)'=='true'">
      <AppConfigWithTargetPath Remove="@(AppConfigWithTargetPath)" />
      <AppConfigWithTargetPath Include="$(_SCNewAppConfigFile)">
        <TargetPath>$(_OldAppConfigWithTargetPath)</TargetPath>
      </AppConfigWithTargetPath>
    </ItemGroup>
  </Target>
</Project>